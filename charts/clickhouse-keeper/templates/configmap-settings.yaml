# Setup ClickHouse Keeper settings
{{ $root := . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "clickhouse-keeper.fullname" . }}-settings
  namespace: {{ .Values.namespace | default .Release.Namespace }}
data:
  keeper_config.xml: |
    <clickhouse>
        <logger>
            <level>trace</level>
            <console>true</console>
        </logger>
        <listen_host>0.0.0.0</listen_host>
        <keeper_server incl="keeper_server">
            <enable_reconfiguration>false</enable_reconfiguration>
            <path>/var/lib/clickhouse-keeper</path>
            <tcp_port>2181</tcp_port>
            <four_letter_word_white_list>*</four_letter_word_white_list>
            <coordination_settings>
                <operation_timeout_ms>10000</operation_timeout_ms>
                <session_timeout_ms>30000</session_timeout_ms>
                <raft_logs_level>information</raft_logs_level>
            </coordination_settings>
            <server_id from_env="KEEPER_SERVER_ID"/>
            <raft_configuration>
                {{- range $index := until (int .Values.replicaCount) -}}
                {{- $id := add $index 1 }}
                <server>
                    <id>{{ $id }}</id>
                    <hostname>clickhouse-keeper-{{ $index }}.{{ include "clickhouse-keeper.fullname" $root }}s.{{ $.Values.namespace | default $.Release.Namespace }}.svc.cluster.local.</hostname>
                    <port>{{ $.Values.service.raftPort }}</port>
                </server>
                {{- end -}}
            </raft_configuration>
        </keeper_server>
        <prometheus>
            <endpoint>/metrics</endpoint>
            <port>7000</port>
            <metrics>true</metrics>
            <events>true</events>
            <asynchronous_metrics>true</asynchronous_metrics>
            <status_info>true</status_info>
        </prometheus>
    </clickhouse>
